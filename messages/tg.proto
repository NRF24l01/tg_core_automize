syntax = "proto3";

package messages;

enum MessageType {
  UNKNOWN = 0;
  NEW_MESSAGE = 1;    // type = 1
  EDIT_MESSAGE = 2;   // type = 2
  DELETE_MESSAGE = 3; // type = 3
  ACK = 4;            // type = 0 (подтверждение отправки)
  SEND_REQUEST = 5;   // клиент просит отправить сообщение
}

message NewEvent {
  MessageType type = 1;           // соответствует твоему task["type"]
  bool is_private = 2;            // соответствует task["is_private"]

  map<string, string> config = 3; // соответствует task["config"]
  map<string, string> payload = 4; // соответствует task["payload"]
  map<string, string> system_config = 5; // соответствует task["system_config"]
}

message ActionRequired {
  MessageType type = 1;           // соответствует твоему task["type"]
  bool require_answer = 2;            // соответствует task["is_private"]
  map<string, string> payload = 3; // соответствует task["payload"]
}

service TgService {
  rpc Exchange(stream NewEvent) returns (stream ActionRequired);
}
